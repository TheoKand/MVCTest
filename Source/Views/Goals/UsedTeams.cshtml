@model MVC_TestBed.Models.GoalContext
<div id="CurrentTeams" style="display: inline-block; width: 100%; height: 8%;">
    @{
        var goals = new List<MVC_TestBed.Models.Goal>();
    }
    @for (int i = 0; i < Model.CurrentTeams.Count; i++)
    {

        foreach (List<MVC_TestBed.Models.Goal> list in Model.AllGames.Where(g => g.HomeTeam == Model.CurrentTeams[i]).Select(g => g.HomeTeamGoals))
        {
            foreach (MVC_TestBed.Models.Goal goal in list)
            {
                goals.Add(goal);
            }
        }

        foreach (List<MVC_TestBed.Models.Goal> list in Model.AllGames.Where(g => g.AwayTeam == Model.CurrentTeams[i]).Select(g => g.AwayTeamGoals))
        {
            foreach (MVC_TestBed.Models.Goal goal in list)
            {
                goals.Add(goal);
            }
        }            
            
        <div class="box">@Model.CurrentTeams[i].Name</div>
    }
</div>
@{
    int totalGoals = goals.Count;
    int totalHeight = 500;
    Dictionary<string, int> minuteRanges = new Dictionary<string, int>();

}
@if (goals.Count > 0)
{
        
    

    <div style="height: 90%; ">
        <table style="width: 100%; height: 100%" border="0" >
            <tr>
                @{ 
                    var maxGoals = 0;
                }
                @for (int i = 0; i < 100; i = i + 10)
                {
                    int startMinute = i;
                    int endMinute = i + 9;
                    
                    var thisMinuteRangeGoals = goals.Where(g => g.Minute >= startMinute && g.Minute <= endMinute).ToList();
                    if (thisMinuteRangeGoals.Count > maxGoals)
                    {
                        maxGoals = thisMinuteRangeGoals.Count;
                    }
                    
                }

                @for (int i = 0; i < 100; i = i + 10)
                {
                    <td valign="bottom" width="10" >
                        @{
                    int startMinute = i;
                    int endMinute = i + 9;
                    var thisMinuteRangeGoals = goals.Where(g => g.Minute >= startMinute && g.Minute <= endMinute).ToList();

                    int thisMinuteRangeHeight = totalHeight * thisMinuteRangeGoals.Count / maxGoals;
                    decimal perc = (decimal)thisMinuteRangeGoals.Count / (decimal)maxGoals;
                        }
                        <table class="bartable" style="font-size:x-small;white-space:nowrap"  perc="@perc.ToString().Replace(",",".")">
                            <tr>
                                <td style="background-color: #99FF33"></td>
                            </tr>
                            <tr>
                                <td valign="bottom" bgcolor="white" height="1%">
                                    minute<br />
                                    @startMinute - @endMinute<br />
                                    <b>@thisMinuteRangeGoals.Count Goals</b>
                                </td>
                            </tr>
                        </table>
                    </td>
                }
            </tr>
        </table>
    </div>
    
}
<script type="text/javascript">
    $("div.box").draggable();
    $("#header").droppable({
        drop: function (event, ui) {
            var teamToRemove = ui.draggable.text();
            ui.draggable.remove();
            $("#removeTeamLink").attr("href", "/Goals?removeTeam=" + teamToRemove).click();

        }
    });

    var debug = "";

    $("table.bartable").each(function () {
        var totalHeight = $("#content").height();
        var newHeight = Math.ceil(totalHeight * parseFloat( $(this).attr("perc"))  * 0.7);
        debug = debug + $(this).attr("perc") + " , " + newHeight + "\n";
        $(this).animate({ height: newHeight + "px" }, "fast");
    });

    //alert(debug);

</script>
